# Sets prefix globally
#unbind C-b
set -g prefix C-b

# Reload tmux.conf
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# improve colors
set-option -g default-terminal "screen-256color"

# Set prompt behavior like emacs
#set-option -g status-keys "emacs"

# Set length of char in status bar left
set-option -g status-left-length 50

#-------------------------------------------------------#
# STATUS LINE/TOOLBAR AT BOTTOM OF SCREEN
#-------------------------------------------------------#

# Set background of status line to black
#-------------------------------------------------------#
set -g status-bg black


#Colours for messages
#-------------------------------------------------------#
# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

#Show reloaded message in bright white
set -g message-fg white
set -g message-bg default
set -g message-attr bright
#-------------------------------------------------------#


# Status line left side
#-------------------------------------------------------#
# Session: 0 1 1 settings
set -g status-left-length 40
set -g status-left "#[fg=colour245]Session: #S #[fg=colour84]#I #[fg=colour75]#P"
#-------------------------------------------------------#


#Window/pane type in centre
#-------------------------------------------------------#
#move bash* to centre
set -g status-justify centre

# set the color of the window list (name of the pane)
setw -g window-status-fg colour75
setw -g window-status-bg default
setw -g window-status-attr dim
#-------------------------------------------------------#


#Time and date on right-hand side
#-------------------------------------------------------#
# Status line right side
# e.g. 28 Nov 18:15
set -g status-right "#[fg=colour245]%d %b #[fg=colour256] %R"

# Update the status bar every sixty seconds (for the time)
set -g status-interval 60
#-------------------------------------------------------#

#-------------------------------------------------------#
#END OF STATUS LINE MESSAGES
#-------------------------------------------------------#
# More intuitive panes split and remember current path
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
#bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Resize panes using shift key
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Remember current patch when creating new window
bind c new-window -c '#{pane_current_path}'

# Set base-index to 1 (useful for switching between windows)
set-option -g base-index 1
set-option -g renumber-windows on

# Set break-pane and detach (-d) while keeping focus on current window
bind-key b break-pane -d

# Easily go to tmux choose-tree to navigate between sessions
bind-key C-j choose-tree

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
#unbind -t vi-copy Enter

set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l ${SHELL}"
